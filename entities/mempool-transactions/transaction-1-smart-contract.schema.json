{"type":"object","title":"MempoolSmartContractTransaction","description":"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","allOf":[{"title":"AbstractMempoolTransaction","description":"Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types","type":"object","allOf":[{"title":"BaseTransaction","description":"Transaction properties that are available from a raw serialized transactions. These are available for transactions in the mempool as well as mined transactions.","type":"object","required":["tx_id","nonce","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode"],"additionalProperties":false,"properties":{"tx_id":{"type":"string","description":"Transaction ID"},"nonce":{"type":"integer","description":"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},"fee_rate":{"type":"string","description":"Transaction fee as Integer string (64-bit unsigned integer)."},"sender_address":{"type":"string","description":"Address of the transaction initiator"},"sponsor_nonce":{"type":"integer"},"sponsored":{"type":"boolean","description":"Denotes whether the originating account is the same as the paying account"},"sponsor_address":{"type":"string"},"post_condition_mode":{"title":"PostConditionMode","description":"","type":"string","enum":["allow","deny"]},"post_conditions":{"type":"array","items":{"title":"PostCondition","description":"Post-conditionscan limit the damage done to a user's assets","anyOf":[{"title":"PostConditionStx","type":"object","allOf":[{"type":"object","required":["principal"],"additionalProperties":false,"properties":{"principal":{"title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type"],"additionalProperties":false,"properties":{"condition_code":{"title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"amount":{"type":"string"},"type":{"enum":["stx"],"type":"string"}}}]},{"title":"PostConditionFungible","type":"object","allOf":[{"type":"object","required":["principal"],"additionalProperties":false,"properties":{"principal":{"title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","amount","type","asset"],"additionalProperties":false,"properties":{"condition_code":{"title":"PostConditionFungibleConditionCode","description":"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.","type":"string","enum":["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},"type":{"enum":["fungible"],"type":"string"},"amount":{"type":"string"},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]},{"title":"PostConditionNonFungible","type":"object","allOf":[{"type":"object","required":["principal"],"additionalProperties":false,"properties":{"principal":{"title":"PostConditionPrincipal","type":"object","anyOf":[{"type":"object","additionalProperties":false,"description":"Principal Origin","required":["type_id"],"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_origin"]}}},{"type":"object","description":"Principal Standard","required":["type_id","address"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_standard"]},"address":{"type":"string"}}},{"type":"object","description":"Principal Contract","required":["type_id","address","contract_name"],"additionalProperties":false,"properties":{"type_id":{"type":"string","description":"String literal of type `PostConditionPrincipalType`","enum":["principal_contract"]},"address":{"type":"string"},"contract_name":{"type":"string"}}}]}}},{"type":"object","required":["condition_code","type","asset_value","asset"],"additionalProperties":false,"properties":{"condition_code":{"title":"PostConditionNonFungibleConditionCode","description":"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.","type":"string","enum":["sent","not_sent"]},"type":{"enum":["non_fungible"],"type":"string"},"asset_value":{"type":"object","additionalProperties":false,"required":["hex","repr"],"properties":{"hex":{"type":"string"},"repr":{"type":"string"}}},"asset":{"type":"object","required":["asset_name","contract_address","contract_name"],"additionalProperties":false,"properties":{"asset_name":{"type":"string"},"contract_address":{"type":"string"},"contract_name":{"type":"string"}}}}}]}]}},"anchor_mode":{"title":"TransactionAnchorModeType","type":"string","enum":["on_chain_only","off_chain_only","any"],"description":"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."}}},{"required":["tx_status","receipt_time","receipt_time_iso"],"additionalProperties":false,"properties":{"tx_status":{"title":"MempoolTransactionStatus","description":"Status of the transaction","type":"string","enum":["pending","dropped_replace_by_fee","dropped_replace_across_fork","dropped_too_expensive","dropped_stale_garbage_collect"]},"receipt_time":{"type":"number","description":"A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."},"receipt_time_iso":{"type":"string","description":"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."}}}]},{"type":"object","title":"SmartContractTransactionMetadata","description":"Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract","required":["tx_type","smart_contract"],"additionalProperties":false,"properties":{"tx_type":{"type":"string","enum":["smart_contract"]},"smart_contract":{"type":"object","additionalProperties":false,"required":["contract_id","source_code"],"properties":{"clarity_version":{"type":"number","description":"The Clarity version of the contract, only specified for versioned contract transactions, otherwise null","nullable":true},"contract_id":{"type":"string","description":"Contract identifier formatted as `<principaladdress>.<contract_name>`"},"source_code":{"type":"string","description":"Clarity code of the smart contract being deployed"}}}}}]}